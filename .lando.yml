name: symfonyproject
recipe: symfony

excludes:
  - "var/cache"
  - "vendor"
  - "node_modules"

services:
  appserver:
    webroot: ./public
    type: 'php:8.2'
    via: 'apache:2.4'
    ssl: true
    build_as_root:
      - apt-get update
      - apt-get install nano
      - apt-get install nodejs npm

  database:
    app_mount: disabled
    type: "mysql:8.0"
    creds:
      user: "symfony"
      password: "symfony"
      database: "symfony"
    overrides:
      image: "bitnami/mysql:8.0.36-debian-12-r12"
      ports:
        - '3306:3307'
    healthcheck:
      command: mysql -uroot --silent --execute "SHOW DATABASES;"
      retry: 5
      delay: 5000

  mercure:
    #app_mount: false
    type: compose
    services:
      image: dunglas/mercure
      command: caddy run -c /etc/caddy/dev.Caddyfile
      environment:
        SERVER_NAME: ':80'
        MERCURE_PUBLISHER_JWT_KEY: '!ChangeThisMercureHubJWTSecretKey!'
        MERCURE_SUBSCRIBER_JWT_KEY: '!ChangeThisMercureHubJWTSecretKey!'
      ports:
        - 3000:80
        #volumes:
        #- ./.lando/Caddyfile.dev:/etc/caddy/Caddyfile.dev

tooling:
  console:
    service: appserver
    cmd: php bin/console
    dir: /app
    description: Runs console commands

  composer:
    service: appserver
    cmd: composer
    dir: /app
    description: Runs composer commands

  node:install:
    service: appserver
    cmd: /app/.lando/install-nodejs.sh
    user: root
    dir: /app/.lando
    description: Install NodeJS

  npm:watch:
    service: appserver
    cmd: npm run watch
    dir: /app
    description: Starts npm watcher

  npm:build:
    service: appserver
    cmd: npm run build
    dir: /app
    description: Builds javascript

  npm:install:
    service: appserver
    cmd: npm install
    dir: /app
    description: Starts installs packages

  ecs:
    service: appserver
    cmd: ./vendor/bin/ecs
    dir: /app
    description: Check code against code standard