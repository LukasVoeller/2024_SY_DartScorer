app_mercure:
  path: '/mercure'
  controller: 'App\Controller\MercureController::index'

publish_event:
  path: '/publish'
  controller: 'App\Controller\PublishController::publish'

############### Routes for displaying pages ###############

home:
  path: '/'
  controller: 'App\Controller\HomeController::index'

darts:
  path: '/darts'
  controller: 'App\Controller\DartsController::index'

new-game:
  path: '/new-game'
  controller: 'App\Controller\NewGameController::index'

game:
  path: '/game/{id}'
  controller: 'App\Controller\GameController::index'
#  methods: [ 'GET' ]
#  requirements:
#    id: '\d+' # Ensure that the id parameter is a digit

player:
  path: '/player'
  controller: 'App\Controller\PlayerController::index'

user:
  path: '/user'
  controller: 'App\Controller\UserController::index'

settings:
  path: '/settings'
  controller: 'App\Controller\SettingsController::index'

profile:
  path: '/profile'
  controller: 'App\Controller\ProfileController::index'

login:
  path: '/login'
  controller: 'App\Controller\LoginController::index'

logout:
  path: '/logout'



######################## API Routes #######################

api_login_check:
  path: /api/login_check

############ Player

api_get_player:
  path: '/api/player'
  controller: 'App\Controller\PlayerController::getPlayers'
  methods: ['GET']

api_get_player_by_id:
  path: '/api/player/id/{id}'
  controller: 'App\Controller\PlayerController::getPlayerById'
  methods: ['GET']

api_get_players_no_user:
  path: '/api/player/no-user'
  controller: 'App\Controller\PlayerController::getPlayersWithoutUser'
  methods: ['GET']

api_post_player:
  path: '/api/player'
  controller: 'App\Controller\PlayerController::postPlayer'
  methods: ['POST']

api_delete_player_by_id:
  path: '/api/player/id/{id}'
  controller: 'App\Controller\PlayerController::deletePlayerById'
  methods: ['DELETE']
  requirements:
    id: '\d+'

############ User

api_get_user:
  path: '/api/user'
  controller: 'App\Controller\UserController::getUsers'
  methods: ['GET']

api_get_user_by_id:
  path: '/api/user/id/{id}'
  controller: 'App\Controller\UserController::getUserById'
  methods: ['GET']

api_post_user:
  path: '/api/user'
  controller: 'App\Controller\UserController::postUser'
  methods: ['POST']

api_delete_user_by_id:
  path: '/api/user/id/{id}'
  controller: 'App\Controller\UserController::deleteUserById'
  methods: ['DELETE']
  requirements:
    id: '\d+'

############ Score

api_confirm_score:
  path: '/api/score/confirm'
  controller: 'App\Controller\ScoreController::confirmScore'
  methods: ['POST']

api_undo_score:
  path: '/api/score/undo'
  controller: 'App\Controller\ScoreController::undoScore'
  methods: ['POST']

api_last_scores:
  path: '/api/score/last'
  controller: 'App\Controller\ScoreController::lastScores'
  methods: ['POST']

############ Game

api_get_game:
  path: '/api/game'
  controller: 'App\Controller\GameController::getGames'
  methods: ['GET']

api_get_game_latest_five:
  path: '/api/game/latest-five'
  controller: 'App\Controller\GameController::getGamesLatestFive'
  methods: [ 'GET' ]

api_get_game_by_id:
  path: '/api/game/id/{id}'
  controller: 'App\Controller\GameController::getGameById'
  methods: ['GET']
  requirements:
    id: '\d+'

api_game_create:
  path: '/api/game/create'
  controller: 'App\Controller\NewGameController::createGame'
  methods: ['POST']

api_save_game:
  path: '/api/game/save'
  controller: 'App\Controller\GameController::saveGame'
  methods: ['POST']

api_to_throw_game:
  path: '/api/game/to-throw'
  controller: 'App\Controller\GameController::setToThrow'
  methods: ['POST']

api_get_tally:
  path: '/api/game/id/{gameId}/player/id/{playerId}'
  controller: 'App\Controller\TallyController::getTally'
  methods: ['GET']
  requirements:
    gameId: '\d+'
    playerId: '\d+'